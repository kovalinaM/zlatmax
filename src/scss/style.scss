//файл обнуляющих стилей
@import "nullstyle.scss";

@import "base/_mixins";

//Подключение шрифтов
@import "fonts/icons.scss";
@import "fonts/fonts.scss";
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&display=swap');
/*========================================*/


//Шрифт по умолчанию
$fontFamily: 'Montserrat', sans-serif;
$fontSize: rem(18);

//Основные цвета
$mainColor: #000; 
$mainDarkColor: #141414; 
$mainOrange: #e8aa31;
$backgroundColor: #f5f5f5;



/*=======Настройка адптивной сетки============-*/

//Минимальная ширина страницы
$minWidth: 320;
//Ширина полотна (макета)
$maxWidth: 1920;
//Ширина ограничивающего контейнера
$maxWidthContainer: 1590;
//Общий отступ у контейнера
$containerPadding: 30;

//Ширина срабатывания первого брейкпойнта
$containerWidth: $maxWidthContainer + $containerPadding;

//Брейк-пойнты
$pc: em($containerWidth); //ПК, ноутбуку, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Плантшеты нектооые тедефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); //Телефоны

//Тип адаптива
//1 = отзывчивыость (у контейнера нет брейкпойнтов)
//2 = по брейк-пойнам ( контейнер меняет свою ширину по брейк-пойнтам)
$responsiveType: 1;


//Mixin 
// @mixin adaptiveValue($type, $maxtSize,  $minSize){


// }

/*===============Ограничивающий контейнер======================*/

/*Стили будут применяться дл всех классов содержащих *__container 
Например, header__container 
*/

@if ($responsiveType==1) {
    //отзывчивая
    [class*="__container"] {
        @if ($maxWidthContainer>0) {
            max-width: rem($containerWidth);
            margin: 0 auto;
            min-height: 100%;
            width: 100%;
        }
        @if ($containerPadding>0) {
            @if ($maxWidthContainer>0) {
                padding: 0 rem(calc($containerPadding / 2));
            } 
        }
    }
} @else {
    //по брейк-поинтам
    [class*="__container"] {
        margin: 0 auto;
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
        } @else {
            @if ($containerPadding>0){
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
        @media(max-width: $pc) {
            max-width: rem(970);
        }
        @media(max-width: $tablet) {
            max-width: rem(750);
        }
        @media(max-width: $mobile) {
            max-width: none;
            @if ($containerPadding > 0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}
/*========Подключение стилей================*/
@import "header";
@import "footer";

@import "base";
@import "common";
/*Стили будут применяться для всех классов *-ibg. Например, main__image-ibg*/
// [class*="-ibg"] {
//     position: relative;
//     img {
//         position: absolute;
//         width: 100%;
//         height: 100%;
//         top: 0;
//         left: 0;
//         object-fit: cover;
//     }
// }




// .hidden {
//     display: none;
// }

/*-------------------------------*/
body{
    font-family: $fontFamily;
    color: $mainColor;
    font-weight: 500;
    .lock & {
        overflow: hidden;
        touch-action: none;
    }
}

/*====Оболочка==========================*/
.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;    
}